{"version":3,"sources":["assets/loading.svg","components/Loading.js","components/Nav.js","components/subcomponents/ToggleSwitch.js","components/Preferences.js","components/Search.js","components/VideoQuality.js","components/VideoInfo.js","App.js","index.js"],"names":["Loading","className","src","loading","alt","Nav","dark","switchTheme","setPref","onClick","class","ToggleSwitch","value","Preferences","autoDownload","onAutoDownloadChange","formatType","formatTypes","onFormatChange","nativeMode","onNativeModeChange","onChange","e","options","Search","url","setUrl","getVideoInfo","target","onKeyDown","type","placeholder","VideoQuality","resolution","format","VideoInfo","useState","qualities","map","quality","index","label","App","setDark","onSearch","setSearch","showInitial","showPref","setAutoDownload","setNativeMode","setFormatType","useEffect","local_dark","localStorage","getItem","document","documentElement","setAttribute","localAutoDownload","localFormatType","JSON","parse","setItem","stringify","localNativeMode","a","key","axios","get","params","videoURL","res","console","log","data","ReactDOM","render","StrictMode","getElementById"],"mappings":"mVAAe,G,MAAA,IAA0B,qC,OCI1B,SAASA,IACtB,OACE,qBAAKC,UAAU,iBAAf,SACE,qBAAKC,IAAKC,EAASC,IAAI,O,MCJd,SAASC,EAAT,GAA8C,IAA/BC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,QAC/C,OACE,sBAAKP,UAAU,MAAf,UACE,sBAAKA,UAAU,aAAf,UACE,sCADF,aAGA,sBAAKA,UAAU,YAAf,UACE,qBACEQ,QAASF,EACTN,UAAS,qBAAgBK,EAAO,OAAS,MAE3C,qBAAKL,UAAU,OAAOQ,QAAS,kBAAMD,GAAQ,IAA7C,SACE,mBAAGE,MAAM,+B,kBCbJ,SAASC,EAAT,GAA2C,IAAnBC,EAAkB,EAAlBA,MAAOH,EAAW,EAAXA,QAC5C,OACE,qBAAKA,QAASA,EAASR,UAAS,iBAAYW,EAAQ,KAAO,MCChD,SAASC,EAAT,GASX,IARFL,EAQC,EARDA,QACAM,EAOC,EAPDA,aACAC,EAMC,EANDA,qBACAC,EAKC,EALDA,WACAC,EAIC,EAJDA,YACAC,EAGC,EAHDA,eACAC,EAEC,EAFDA,WACAC,EACC,EADDA,mBAEA,OACE,qBAAKnB,UAAU,YAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,sBAAKA,UAAU,aAAf,UACE,8CACA,wBAAQQ,QAAS,kBAAMD,GAAQ,IAA/B,SACE,mBAAGP,UAAU,uBAGjB,sBAAKA,UAAU,WAAf,UACE,sBAAKA,UAAU,WAAf,UACE,sBAAKA,UAAU,eAAf,UACE,sBAAKA,UAAU,YAAf,UACE,wCADF,eAGA,qBAAKA,UAAU,WAAf,8EAIF,qBAAKA,UAAU,iBAAf,SACE,cAACU,EAAD,CACEC,MAAOE,EACPL,QAASM,SAKf,sBAAKd,UAAS,mBAAca,EAAe,GAAK,YAAhD,UACE,sBAAKb,UAAU,eAAf,UACE,sBAAKA,UAAU,YAAf,UACE,4CADF,WAGA,qBAAKA,UAAU,WAAf,6DAIF,qBAAKA,UAAU,iBAAf,SACE,cAAC,IAAD,CACEoB,SAAU,SAACC,GAAD,OAAOJ,EAAeI,IAChCC,QAASN,EACTL,MAAOI,SAKb,sBAAKf,UAAS,mBAAca,EAAe,WAAa,IAAxD,UACE,sBAAKb,UAAU,eAAf,UACE,sBAAKA,UAAU,YAAf,UACE,uCADF,kBAGA,qBAAKA,UAAU,WAAf,oHAKF,qBAAKA,UAAU,iBAAf,SACE,cAACU,EAAD,CAAcC,MAAOO,EAAYV,QAASW,iB,MCpEzC,SAASI,EAAT,GAAgD,IAA9BC,EAA6B,EAA7BA,IAAKC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,aAC5C,OACE,sBAAK1B,UAAU,gBAAf,UACE,mBAAGA,UAAU,oBACb,sBAAKA,UAAU,SAAf,UACE,uBACEW,MAAOa,EACPJ,SAAU,SAACC,GAAD,OAAOI,EAAOJ,EAAEM,OAAOhB,QACjCiB,UAAW,SAACP,GAAD,OAAOK,EAAaL,IAC/BQ,KAAK,OACLC,YAAY,cAEd,wBAAQ9B,UAAU,YAAlB,SACE,mBAAGS,MAAM,yBAEX,wBAAQD,QAAS,kBAAMiB,EAAO,KAAKzB,UAAU,iBAA7C,SACE,mBAAGS,MAAM,0B,YChBJ,SAASsB,EAAT,GAA+C,IAAvBC,EAAsB,EAAtBA,WAAYC,EAAU,EAAVA,OACjD,OACE,sBAAKjC,UAAU,cAAf,UACE,qBAAKA,UAAU,YAAf,SACE,mBACEA,UAAsB,SAAXiC,EAAoB,gBAAkB,oBAGrD,qBAAKjC,UAAU,aAAf,SAA6BgC,IAC7B,qBAAKhC,UAAU,SAAf,SAAyBiC,OCRhB,SAASC,EAAT,GAAmD,IAA9BV,EAA6B,EAA7BA,IAAKC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,aAAgB,EAC7BS,mBAAS,CACzC,CACEH,WAAY,UACZC,OAAQ,QAEV,CACED,WAAY,OACZC,OAAQ,UARmD,mBACxDG,EADwD,UAY/D,OACE,sBAAKpC,UAAU,mBAAf,UACE,sBAAKA,UAAU,SAAf,UACE,uBACEW,MAAOa,EACPJ,SAAU,SAACC,GAAD,OAAOI,EAAOJ,EAAEM,OAAOhB,QACjCiB,UAAW,SAACP,GAAD,OAAOK,EAAaL,IAC/BQ,KAAK,OACLC,YAAY,cAEd,wBAAQ9B,UAAU,YAAlB,SACE,mBAAGS,MAAM,yBAEX,wBAAQD,QAAS,kBAAMiB,EAAO,KAAKzB,UAAU,iBAA7C,SACE,mBAAGS,MAAM,uBAGb,sBAAKT,UAAU,gBAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,mBAAGA,UAAU,oBACb,qBAAKA,UAAU,iBAEjB,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,eAAf,6BACA,qBAAKA,UAAU,aAAf,kFAGA,sBAAKA,UAAU,gBAAf,UACE,mBAAGS,MAAM,iBADX,eAGA,sBAAKT,UAAU,iBAAf,UACE,6CADF,cAGA,qBAAKA,UAAU,mBAAf,SACGoC,EAAUC,KAAI,SAACC,EAASC,GAAV,OACb,cAAC,EAAD,CAEEP,WAAYM,EAAQN,WACpBC,OAAQK,EAAQL,QAFXM,iBCxCrB,IAEMvB,EAAc,CAClB,CAAEL,MAAO,YAAa6B,MAAO,aAC7B,CAAE7B,MAAO,aAAc6B,MAAO,cAC9B,CAAE7B,MAAO,UAAW6B,MAAO,YA2HdC,MAxHf,WAAgB,IAAD,EACWN,oBAAS,GADpB,mBACN9B,EADM,KACAqC,EADA,OAESP,mBAAS,IAFlB,mBAENX,EAFM,KAEDC,EAFC,OAGiBU,oBAAS,GAH1B,mBAGNQ,EAHM,KAGIC,EAHJ,OAIqBT,oBAAS,GAJ9B,mBAINU,EAJM,aAMeV,oBAAS,IANxB,mBAMNW,EANM,KAMIvC,EANJ,OAO2B4B,oBAAS,GAPpC,mBAONtB,EAPM,KAOQkC,EAPR,OAQuBZ,oBAAS,GARhC,mBAQNjB,EARM,KAQM8B,EARN,OASuBb,mBAAS,IAThC,mBASNpB,EATM,KASMkC,EATN,KAWbC,qBAAU,WACR,IAAMC,EAAaC,aAAaC,QAAQ,QACnCF,GAA6B,UAAfA,GAIjBT,GAAQ,GACRY,SAASC,gBAAgBC,aAAa,aAAc,UAJpDd,GAAQ,GACRY,SAASC,gBAAgBC,aAAa,aAAc,KAMtD,IAAMC,EAAoBL,aAAaC,QAAQ,gBAC/CN,EAAsC,SAAtBU,GAEhB,IAAMC,EAAkBC,KAAKC,MAAMR,aAAaC,QAAQ,eACnDK,EAIHT,EAAcS,IAHdN,aAAaS,QAAQ,aAAcF,KAAKG,UAAU9C,EAAY,KAC9DiC,EAAcjC,EAAY,KAK5B,IAAM+C,EAAkBX,aAAaC,QAAQ,cAC7CL,EAAkC,SAApBe,KACb,IAEH,IAqCMrC,EAAY,uCAAG,WAAOL,GAAP,eAAA2C,EAAA,yDACL,UAAV3C,EAAE4C,IADa,wDAInBrB,GAAU,GAJS,SAMDsB,IAAMC,IAAN,UAvFV,iCAuFU,cAA8B,CAC9CC,OAAQ,CACNC,SAAU7C,KARK,OAMb8C,EANa,OAYnBC,QAAQC,IAAIF,EAAIG,MAEhB7B,GAAU,GAdS,2CAAH,sDAiBlB,OACE,sBAAK5C,UAAU,MAAf,UACG8C,GACC,cAAC,EAAD,CACEvC,QAASA,EACTM,aAAcA,EACdC,qBA3CmB,WACrBD,GACFkC,GAAgB,GAChBK,aAAaS,QAAQ,eAAgB,WAErCd,GAAgB,GAChBK,aAAaS,QAAQ,eAAgB,UAsCjC9C,WAAYA,EACZC,YAAaA,EACbC,eAnDa,SAACI,GACpB+B,aAAaS,QAAQ,aAAcF,KAAKG,UAAUzC,IAClD4B,EAAc5B,IAkDRH,WAAYA,EACZC,mBAtCiB,WACnBD,GACF8B,GAAc,GACdI,aAAaS,QAAQ,aAAc,WAEnCb,GAAc,GACdI,aAAaS,QAAQ,aAAc,YAmCnC,cAAC,EAAD,CAAKxD,KAAMA,EAAMC,YApED,WACdD,GACFqC,GAAQ,GACRU,aAAaS,QAAQ,OAAQ,SAC7BP,SAASC,gBAAgBC,aAAa,aAAc,MAEpDd,GAAQ,GACRU,aAAaS,QAAQ,OAAQ,QAC7BP,SAASC,gBAAgBC,aAAa,aAAc,UA4DTjD,QAASA,IACnDoC,EACC,cAAC,EAAD,KAECE,GACC,cAAC,EAAD,CAAWrB,IAAKA,EAAKC,OAAQA,EAAQC,aAAcA,IAItDmB,GACC,cAAC,EAAD,CAAQrB,IAAKA,EAAKC,OAAQA,EAAQC,aAAcA,QCjIxDgD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtB,SAASuB,eAAe,W","file":"static/js/main.c3e15ca2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/loading.841823b5.svg\";","import React from \"react\";\r\nimport \"./styles/Loading.scss\";\r\nimport loading from \"../assets/loading.svg\";\r\n\r\nexport default function Loading() {\r\n  return (\r\n    <div className=\"loadingSection\">\r\n      <img src={loading} alt=\"\" />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./styles/Nav.scss\";\r\n\r\nexport default function Nav({ dark, switchTheme, setPref }) {\r\n  return (\r\n    <div className=\"nav\">\r\n      <div className=\"site_title\">\r\n        <span>Yt</span> downld\r\n      </div>\r\n      <div className=\"site_pref\">\r\n        <div\r\n          onClick={switchTheme}\r\n          className={`site_theme ${dark ? \"dark\" : \"\"}`}\r\n        ></div>\r\n        <div className=\"pref\" onClick={() => setPref(true)}>\r\n          <i class=\"ri-settings-6-fill\"></i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function ToggleSwitch({ value, onClick }) {\r\n  return (\r\n    <div onClick={onClick} className={`switch ${value ? \"on\" : \"\"}`}></div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport \"./styles/Preferences.scss\";\r\nimport ToggleSwitch from \"./subcomponents/ToggleSwitch\";\r\n\r\nexport default function Preferences({\r\n  setPref,\r\n  autoDownload,\r\n  onAutoDownloadChange,\r\n  formatType,\r\n  formatTypes,\r\n  onFormatChange,\r\n  nativeMode,\r\n  onNativeModeChange,\r\n}) {\r\n  return (\r\n    <div className=\"prefModal\">\r\n      <div className=\"prefContainer\">\r\n        <div className=\"prefHeader\">\r\n          <div>Preferences</div>\r\n          <button onClick={() => setPref(false)}>\r\n            <i className=\"ri-close-line\"></i>\r\n          </button>\r\n        </div>\r\n        <div className=\"prefList\">\r\n          <div className=\"prefItem\">\r\n            <div className=\"prefItemInfo\">\r\n              <div className=\"prefTitle\">\r\n                <span>Auto</span> download\r\n              </div>\r\n              <div className=\"prefDesc\">\r\n                Videos will be automatically downloaded after giving the url.\r\n              </div>\r\n            </div>\r\n            <div className=\"prefItemAction\">\r\n              <ToggleSwitch\r\n                value={autoDownload}\r\n                onClick={onAutoDownloadChange}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className={`prefItem ${autoDownload ? \"\" : \"disabled\"}`}>\r\n            <div className=\"prefItemInfo\">\r\n              <div className=\"prefTitle\">\r\n                <span>Download</span> Type\r\n              </div>\r\n              <div className=\"prefDesc\">\r\n                Select which type you want to auto download.\r\n              </div>\r\n            </div>\r\n            <div className=\"prefItemAction\">\r\n              <Select\r\n                onChange={(e) => onFormatChange(e)}\r\n                options={formatTypes}\r\n                value={formatType}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className={`prefItem ${autoDownload ? \"disabled\" : \"\"}`}>\r\n            <div className=\"prefItemInfo\">\r\n              <div className=\"prefTitle\">\r\n                <span>Use</span> Native MODE\r\n              </div>\r\n              <div className=\"prefDesc\">\r\n                You can download video from native player. (By using this option\r\n                you can save our server resources)\r\n              </div>\r\n            </div>\r\n            <div className=\"prefItemAction\">\r\n              <ToggleSwitch value={nativeMode} onClick={onNativeModeChange} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./styles/Search.scss\";\r\n\r\nexport default function Search({ url, setUrl, getVideoInfo }) {\r\n  return (\r\n    <div className=\"searchSection\">\r\n      <i className=\"ri-youtube-line\"></i>\r\n      <div className=\"search\">\r\n        <input\r\n          value={url}\r\n          onChange={(e) => setUrl(e.target.value)}\r\n          onKeyDown={(e) => getVideoInfo(e)}\r\n          type=\"text\"\r\n          placeholder=\"Video Url\"\r\n        ></input>\r\n        <button className=\"searchIco\">\r\n          <i class=\"ri-search-eye-line\"></i>\r\n        </button>\r\n        <button onClick={() => setUrl(\"\")} className=\"searchClearIco\">\r\n          <i class=\"ri-close-line\"></i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./styles/VideoQuality.scss\";\r\n\r\nexport default function VideoQuality({ resolution, format }) {\r\n  return (\r\n    <div className=\"qualityCard\">\r\n      <div className=\"downldIco\">\r\n        <i\r\n          className={format === \".mp3\" ? \"ri-music-fill\" : \"ri-movie-line\"}\r\n        ></i>\r\n      </div>\r\n      <div className=\"resolution\">{resolution}</div>\r\n      <div className=\"format\">{format}</div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"./styles/VideoInfo.scss\";\r\nimport VideoQuality from \"./VideoQuality\";\r\n\r\nexport default function VideoInfo({ url, setUrl, getVideoInfo }) {\r\n  const [qualities, setQualities] = useState([\r\n    {\r\n      resolution: \"320kbps\",\r\n      format: \".mp3\",\r\n    },\r\n    {\r\n      resolution: \"720P\",\r\n      format: \".mp4\",\r\n    },\r\n  ]);\r\n\r\n  return (\r\n    <div className=\"videoInfoSection\">\r\n      <div className=\"search\">\r\n        <input\r\n          value={url}\r\n          onChange={(e) => setUrl(e.target.value)}\r\n          onKeyDown={(e) => getVideoInfo(e)}\r\n          type=\"text\"\r\n          placeholder=\"Video Url\"\r\n        ></input>\r\n        <button className=\"searchIco\">\r\n          <i class=\"ri-search-eye-line\"></i>\r\n        </button>\r\n        <button onClick={() => setUrl(\"\")} className=\"searchClearIco\">\r\n          <i class=\"ri-close-line\"></i>\r\n        </button>\r\n      </div>\r\n      <div className=\"infoContainer\">\r\n        <div className=\"thumbnailContainer\">\r\n          <i className=\"ri-youtube-line\"></i>\r\n          <div className=\"thumbnail\"></div>\r\n        </div>\r\n        <div className=\"videoInfo\">\r\n          <div className=\"videoChannel\">Linus Tech Tips</div>\r\n          <div className=\"videoTitle\">\r\n            My Unlimited Budget WiFi at the New House dasdasdasasdasd sdasdasdas\r\n          </div>\r\n          <div className=\"videoDuration\">\r\n            <i class=\"ri-time-fill\"></i>17:35 min\r\n          </div>\r\n          <div className=\"availableTitle\">\r\n            <span>Available</span> Formats\r\n          </div>\r\n          <div className=\"videoQualityList\">\r\n            {qualities.map((quality, index) => (\r\n              <VideoQuality\r\n                key={index}\r\n                resolution={quality.resolution}\r\n                format={quality.format}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport Loading from \"./components/Loading\";\nimport Nav from \"./components/Nav\";\nimport Preferences from \"./components/Preferences\";\nimport Search from \"./components/Search\";\nimport VideoInfo from \"./components/VideoInfo\";\n\nfunction sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nconst API = \"https://ytdl-api.herokuapp.com\";\n\nconst formatTypes = [\n  { value: \"chocolate\", label: \"Chocolate\" },\n  { value: \"strawberry\", label: \"Strawberry\" },\n  { value: \"vanilla\", label: \"Vanilla\" },\n];\n\nfunction App() {\n  const [dark, setDark] = useState(false);\n  const [url, setUrl] = useState(\"\");\n  const [onSearch, setSearch] = useState(false);\n  const [showInitial, setInitial] = useState(true);\n\n  const [showPref, setPref] = useState(true);\n  const [autoDownload, setAutoDownload] = useState(false);\n  const [nativeMode, setNativeMode] = useState(false);\n  const [formatType, setFormatType] = useState({});\n\n  useEffect(() => {\n    const local_dark = localStorage.getItem(\"dark\");\n    if (!local_dark || local_dark === \"false\") {\n      setDark(false);\n      document.documentElement.setAttribute(\"data-theme\", \"\");\n    } else {\n      setDark(true);\n      document.documentElement.setAttribute(\"data-theme\", \"dark\");\n    }\n\n    const localAutoDownload = localStorage.getItem(\"autoDownload\");\n    setAutoDownload(localAutoDownload === \"true\" ? true : false);\n\n    const localFormatType = JSON.parse(localStorage.getItem(\"formatType\"));\n    if (!localFormatType) {\n      localStorage.setItem(\"formatType\", JSON.stringify(formatTypes[0]));\n      setFormatType(formatTypes[0]);\n    } else {\n      setFormatType(localFormatType);\n    }\n\n    const localNativeMode = localStorage.getItem(\"nativeMode\");\n    setNativeMode(localNativeMode === \"true\" ? true : false);\n  }, []);\n\n  const switchTheme = () => {\n    if (dark) {\n      setDark(false);\n      localStorage.setItem(\"dark\", \"false\");\n      document.documentElement.setAttribute(\"data-theme\", \"\");\n    } else {\n      setDark(true);\n      localStorage.setItem(\"dark\", \"true\");\n      document.documentElement.setAttribute(\"data-theme\", \"dark\");\n    }\n  };\n\n  const changeFormat = (e) => {\n    localStorage.setItem(\"formatType\", JSON.stringify(e));\n    setFormatType(e);\n  };\n\n  const toggleAutoDownload = () => {\n    if (autoDownload) {\n      setAutoDownload(false);\n      localStorage.setItem(\"autoDownload\", \"false\");\n    } else {\n      setAutoDownload(true);\n      localStorage.setItem(\"autoDownload\", \"true\");\n    }\n  };\n\n  const toggleNativeMode = () => {\n    if (nativeMode) {\n      setNativeMode(false);\n      localStorage.setItem(\"nativeMode\", \"false\");\n    } else {\n      setNativeMode(true);\n      localStorage.setItem(\"nativeMode\", \"true\");\n    }\n  };\n\n  const getVideoInfo = async (e) => {\n    if (e.key !== \"Enter\") return;\n    // Need to fetch data here\n    //setInitial(false);\n    setSearch(true);\n\n    const res = await axios.get(`${API}/videoInfo`, {\n      params: {\n        videoURL: url,\n      },\n    });\n\n    console.log(res.data);\n\n    setSearch(false);\n  };\n\n  return (\n    <div className=\"App\">\n      {showPref && (\n        <Preferences\n          setPref={setPref}\n          autoDownload={autoDownload}\n          onAutoDownloadChange={toggleAutoDownload}\n          formatType={formatType}\n          formatTypes={formatTypes}\n          onFormatChange={changeFormat}\n          nativeMode={nativeMode}\n          onNativeModeChange={toggleNativeMode}\n        />\n      )}\n      <Nav dark={dark} switchTheme={switchTheme} setPref={setPref} />\n      {onSearch ? (\n        <Loading />\n      ) : (\n        !showInitial && (\n          <VideoInfo url={url} setUrl={setUrl} getVideoInfo={getVideoInfo} />\n        )\n      )}\n\n      {showInitial && (\n        <Search url={url} setUrl={setUrl} getVideoInfo={getVideoInfo} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}